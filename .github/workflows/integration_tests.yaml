on:
  schedule:
    # 5am Mon - Fri, UTC: https://crontab.guru/#0_7_*_*_1-5
    # This corresponds to 12-1am us/eastern (depending on daylight savings), or 9pm - 10pm pacific
    - cron: '0 5 * * 1-5'
  workflow_dispatch:
    inputs:
      provider:
        description: The provider to run on
        required: false
        type: string
        default: aws
      directories:
        description: comma-delimited list of dirs within the apps directory to run (if empty, runs all)
        required: false
        type: string
        default: ts-app,go-app,py-app
      region:
        description: the region to deploy sample apps to
        required: false
        type: string
        default: eu-west-1 # Because they contain memoryDB we cannot target us-east-1 or us-west-2
      config_filenames:
        description: A comma seperated list of configs to test
        required: false
        type: string
      no_destroy:
        description: A flag to keep the stack up after the run
        required: false
        type: boolean
        default: false
  
env:
  PROVIDER: aws
  DIRECTORIES: ts-app,go-app,py-app
  REGION: eu-west-1

    
name: run integration tests
jobs:
  build-klotho:
    runs-on: ubuntu-latest
    steps:
      - name: checkout klotho
        uses: actions/checkout@v3
        with:
          repository: klothoplatform/klotho-pro
          token: ${{ secrets.KLOTHO_PRO_READ_PAT }}  # the "infra-tests checkout" PAT, owned by @klotho-bot
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19.6'
      - name: build
        run: |
          go generate ./...
          go build -o klotho_main ./cmd/klotho 
      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: klotho_main
          path: klotho_main
          retention-days: 30
  run-tests:
    runs-on: ubuntu-latest
    needs: [build-klotho]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
          cache: 'pipenv' # caching pipenv dependencies
      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - run: pipenv install
      - name: download klotho main
        uses: actions/download-artifact@v3
        with:
          name: klotho_main
      - name: install klotho main
        run: |
          chmod +x klotho_main
      - name: run tests
        run: |
          if [[ ${{ github.event_name == 'workflow_dispatch' }} == true ]]; then
            OPTS='--directories ${{ inputs.directories }} --region ${{ inputs.region }} --provider ${{ inputs.provider }}'
          else
            OPTS='--directories ${{ env.DIRECTORIES }} --region ${{ env.REGION }} --provider ${{ env.PROVIDER }}'
          fi
          if [[ -n "${{ inputs.config_filenames }}" ]]; then
            OPTS="$OPTS --config-filenames ${{ inputs.config_filenames }}"
          fi
          if [[ "${{ inputs.no_destroy }}" == "true" ]]; then
            OPTS="$OPTS --no-destroy"
          fi
          pipenv run tests $OPTS
        env: 
          KLOTHO_ID_TOKEN: ${{ secrets.KLOTHO_CREDS_ID_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: logs
          path: logs/
          retention-days: 30
